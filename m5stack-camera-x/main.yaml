substitutions:
  node_name: cam-two

packages:
  node_base: !include ../common/node_base.yaml

esphome:
  platform: ESP32
  board: m5stack-timer-cam
  platformio_options:
    upload_speed: 115200
  # on_boot:
  #   then:
  #     pcf85063.read_time:

wifi:
  manual_ip:
    static_ip: 192.168.1.123

i2c:
  - id: rtc_bus
    scl: GPIO14
    sda: GPIO12

mqtt:
  id: mqtt_client
  broker: 192.168.1.105
  on_message:
    topic: cam/image
    qos: 1
    then:
      - lambda: |-
          ESP_LOGD("main", "message on %d", x.length());

esp32_camera:
  name: camera
  external_clock:
    pin: GPIO27
    frequency: 20MHz
  i2c_pins:
    sda: GPIO25
    scl: GPIO23
  data_pins: [GPIO32, GPIO35, GPIO34, GPIO5, GPIO39, GPIO18, GPIO36, GPIO19]
  vsync_pin: GPIO22
  href_pin: GPIO26
  pixel_clock_pin: GPIO21
  reset_pin: GPIO15

  # resolution: 1024x768
  max_framerate: 1fps

  on_image:
    then:
      - lambda: |-
          const char* image_data_char = reinterpret_cast<char*>(const_cast<uint8_t*>(image.data));

          std::string encodedData = base64_encode(&image_data_char[0], 4000);
          ESP_LOGD("main", "base64 len=%d", encodedData.length());

          bool result = id(mqtt_client).publish("cam/image", encodedData, 1);
          ESP_LOGD("main", "result %d", result);
