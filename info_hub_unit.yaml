esphome:
  name: info_hub_unit
  platform: ESP8266
  board: nodemcuv2

wifi:
  ssid: "UPCB7751E2"
  password: !secret wifi_password
  manual_ip:
    static_ip: 192.168.0.120
    gateway: 192.168.0.1
    subnet: 255.255.255.0
    dns1: 1.1.1.1

logger:

api:

ota:

i2c:

time:
  - platform: sntp
    id: sntp_time

sensor:
  - platform: homeassistant
    id: airly_aqi
    name: "Airly CAQI"
    entity_id: sensor.airly_air_quality_index
    internal: true
    on_value:
      then:
        - lambda: id(tm1651_battery).set_brightness(3);
        - lambda: |-
            if (x > 0 && x <= 14) {
              id(tm1651_battery).set_level(7);
            } else if (x >= 15 && x <= 29) {
              id(tm1651_battery).set_level(6);
            } else if (x >= 30 && x <= 40) {
              id(tm1651_battery).set_level(5);
            } else if (x >= 41 && x <= 55) {
              id(tm1651_battery).set_level(4);
            } else if (x >= 56 && x <= 64) {
              id(tm1651_battery).set_level(3);
            } else if (x >= 65 && x <= 74) {
              id(tm1651_battery).set_level(2);
            } else if (x >= 75) {
              id(tm1651_battery).set_level(1);
            }

  - platform: homeassistant
    id: airly_temperature
    entity_id: sensor.airly_temperature
    internal: true
  - platform: homeassistant
    id: airly_humidity
    entity_id: sensor.airly_humidity
    internal: true

  - platform: bme680
    temperature:
      id: temperature
      name: "BME680 Temperature"
      oversampling: 4x
    pressure:
      id: pressure
      name: "BME680 Pressure"
      oversampling: 4x
    humidity:
      id: humidity
      name: "BME680 Humidity"
      oversampling: 4x
    gas_resistance:
      name: "BME680 Gas Resistance"
    iir_filter: 3x
    address: 0x77

  - platform: hm3301
    pm_1_0:
      name: "PM1.0"
    pm_2_5:
      name: "PM2.5"
    pm_10_0:
      name: "PM10.0"
    aqi:
      id: aqi
      name: "AQI"
      calculation_type: "CAQI"

switch:
  - platform: template
    name: "Backlights"
    assumed_state: true
    optimistic: true
    turn_on_action:
      then:
        - lambda: id(screen).backlight();
        - lambda: id(tm1651_battery).turn_on();
    turn_off_action:
      then:
        - lambda: id(screen).no_backlight();
        - lambda: id(tm1651_battery).turn_off();

tm1651:
  id: tm1651_battery
  clk_pin: D5
  dio_pin: D6

display:
  - platform: lcd_pcf8574
    id: screen
    dimensions: 20x4
    address: 0x27
    lambda: |-
      it.strftime(0, 0, "%F  %T", id(sntp_time).now());
      it.printf(0, 1, "   Temp    Hum   AQI");
      it.printf(0,  2, "I");
      it.printf(3,  2, "%.1ft", id(temperature).state);
      it.printf(11, 2, "%.0f%%", id(humidity).state);
      it.printf(17, 2, "%.0f", id(aqi).state);

      it.printf(0,  3, "O");
      it.printf(3,  3, "%.1ft", id(airly_temperature).state);
      it.printf(11, 3, "%.0f%%", id(airly_humidity).state);
      it.printf(17, 3, "%.0f", id(airly_aqi).state);
